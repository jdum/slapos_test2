[directory]
recipe = slapos.cookbook:mkdirectory
etc = ${buildout:directory}/etc
bin = ${buildout:directory}/bin
srv = ${buildout:directory}/srv
var = ${buildout:directory}/var
backup = ${buildout:directory}/backup
run = ${:var}/run
log = ${:var}/log
scripts = ${:etc}/run
services = ${:etc}/service
plugins = ${:etc}/plugin
ssl = ${:etc}/ssl
tmp = ${:srv}/tmp
# redis
redis     = ${:srv}/redis
redis-log = ${:log}/redis
redis-backup   = ${:backup}/flapp

# Postgresql

[postgresql-password]
recipe = slapos.cookbook:generate.password

[postgresql-address]
recipe = slapos.cookbook:free_port
minimum = 5432
maximum = 5452
ip = {{ (ipv4 | list)[0] }}


[postgresql]
recipe = slapos.cookbook:postgres
bin = {{ parameter_dict['postgresql_location'] }}/bin
services = ${directory:services}
dbname  = flapp
superuser = flapp
password = ${postgresql-password:passwd}
pgdata-directory = ${directory:srv}/postgresql

ipv4 = ${postgresql-address:ip}
# disable listening on ipv6
ipv6 =
port = ${postgresql-address:port}

promises = ${postgresql-promise:name}


[postgresql-promise]
<= monitor-promise-base
promise = check_command_execute
name = promise-postgresql.py
config-command = ${postgresql-psql:wrapper-path} -c '\q'


[postgresql-psql]
recipe = slapos.cookbook:wrapper
wrapper-path = ${directory:bin}/${:_buildout_section_name_}
command-line =
    ${postgresql:bin}/psql
        -h ${postgresql:pgdata-directory}
        -U ${postgresql:superuser}
        -d ${postgresql:dbname}


[postgresql-binary-link]
recipe = slapos.cookbook:symbolic.link
target-directory = ${directory:bin}
link-binary = ${postgresql:bin}/postgres ${postgresql:bin}/psql

# Redis

[service-redis]
recipe  = slapos.cookbook:redis.server
wrapper = ${directory:services}/redis
promise-wrapper = ${directory:bin}/redis-promise
server-dir  = ${directory:redis}
config-file = ${directory:etc}/redis.conf
log-file    = ${directory:redis-log}/redis.log
pid-file    = ${directory:run}/redis.pid
use-passwd  = false
unixsocket  = ${:server-dir}/redis.socket
# port = 0 means "don't listen on TCP at all" - listen only on unix socket
ipv6    = ::1
port    = 0
server-bin = {{ parameter_dict['redis_bin'] }}
cli-bin = {{ parameter_dict['redis_cli'] }}
depend =
    ${logrotate-entry-redis:recipe}


[redis-promise]
<= monitor-promise-base
promise = check_command_execute
name = redis.py
config-command = ${service-redis:promise-wrapper}


[logrotate-entry-redis]
<= logrotate-entry-base
name = redis
log = ${directory:redis-log}/*.log
frequency = daily
rotate-num = 30


[request-flapp-frontend]
<= slap-connection
recipe = slapos.cookbook:requestoptional
name = flapp Frontend
# XXX We have hardcoded SR URL here.
software-url = http://git.erp5.org/gitweb/slapos.git/blob_plain/HEAD:/software/apache-frontend/software.cfg
shared = true
config-url = http://[${flapp-parameters:ipv6}]:${flapp-parameters:port}
return = secure_access domain


[flapp-frontend-promise]
<= monitor-promise-base
promise = check_url_available
name = flapp_frontend.py
config-url = ${request-flapp-frontend:connection-secure_access}


[flapp-parameters]
pid-file = ${directory:run}/gunicorn.pid
ipv6 = {{ (ipv6 | list)[0] }}
port = 8000
log-file = ${directory:log}/flapp.log


[flapp-wrapper]
recipe = slapos.cookbook:wrapper
command-line =
  {{parameter_dict['gunicorn']}} --workers 2
  -b [${flapp-parameters:ipv6}]:${flapp-parameters:port}
  -p ${flapp-parameters:pid-file} flapp.wsgi:app
  --error-logfile ${flapp-parameters:log-file}
  --timeout 200 --log-level debug
  --preload

environment =
  REDIS_SOCKET = ${service-redis:unixsocket}

wrapper-path = ${directory:services}/gunicorn_launcher


[flapp-listen-promise]
<= monitor-promise-base
promise = check_socket_listening
name = flapp-listen.py
config-host = ${flapp-parameters:ipv6}
config-port = ${flapp-parameters:port}


[publish-connection-information]
<= monitor-publish
recipe = slapos.cookbook:publish
url = ${request-flapp-frontend:connection-secure_access}
backend-url = ${request-flapp-frontend:config-url}


[buildout]
extends = {{ template_monitor }}
parts =
  publish-connection-information

  postgresql
  postgresql-binary-link

  service-redis
  redis-promise
  logrotate-entry-redis

  flapp-wrapper
  flapp-listen-promise
  flapp-frontend-promise

eggs-directory = {{ eggs_directory }}
develop-eggs-directory = {{ develop_eggs_directory }}
offline = true
